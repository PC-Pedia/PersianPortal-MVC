@model PersianPortal.Models.NewsViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>News</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.News.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.News.Title)
                @Html.ValidationMessageFor(model => model.News.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.News.Body, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.News.Body, new { @id = "news-body" })
                @Html.ValidationMessageFor(model => model.News.Body)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.News.Tags, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.News.Tags)
                @Html.ValidationMessageFor(model => model.News.Tags)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.News.Attachment.URL, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ Html.EnableClientValidation(false); }
                @Html.EditorFor(model => model.News.Attachment.URL)
                @{ Html.EnableClientValidation(true); }
                @*@Html.ValidationMessageFor(model => model.News.Attachment.URL)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.News.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, new SelectList(Model.NewsTypes, "Id", "Type"))
                @Html.ValidationMessageFor(model => model.News.Type)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
                
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/ckeditor")

    <script>
        $(function () {
            $('#news-body').ckeditor();
        });
    </script>
}